{"version":3,"sources":["webpack://Timeously/webpack/universalModuleDefinition","webpack://Timeously/webpack/bootstrap","webpack://Timeously/./src/intervaltype.js","webpack://Timeously/./src/pad.js","webpack://Timeously/./src/timebucket.js","webpack://Timeously/./src/timespan.js","webpack://Timeously/./src/timeously.js","webpack://Timeously/external \"moment-timezone\""],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__1__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","INTERVAL_TYPE","SECONDLY","MINUTELY","HOURLY","DAILY","WEEKLY","MONTHLY","YEARLY","pad","num","size","length","substr","timebucket_moment","timebucket_localOffsetMinutes","Date","getTimezoneOffset","timebucket_TimeBucket","[object Object]","date","this","_tzOffsetMinutes","MonthNames","DayNames","offsetString","tzo","tzOffsetMinutes","Math","floor","abs","timezone","tz","utcOffset","minute","timeBucket","format","replace","year","toString","month","day","hour","second","millisecond","toISOString","getTime","setMinutes","getMinutes","withTimeZoneOffset","toUTCDate","getMilliseconds","val","setMilliseconds","getSeconds","setSeconds","getHours","setHours","getDate","setDate","dayOfWeek","getDay","setDay","dayName","getMonth","setMonth","monthName","getFullYear","setFullYear","daysInMonth","timespan_TimeSpan","millisec","sec","days","hours","mins","totalDays","totalHours","totalSec","totalMins","ceil","clock","timeously_intervals","timeously_intervalLimit","timeously_Timeously","options","callback","interval","type","start","stop","intervalType","startTime","stopTime","started","timerID","title","key","toLowerCase","now","nextTimeoutMillisec","calculateNextTimeout","setLongTimeout","timespan","console","log","clearTimeout","limit","Error","timeously_getLimit","nextEvent","interv","currTime","timeously_validTime","millisecs","timeout_ms","self","setTimeout","remaining","execute"],"mappings":"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","file":"timeously.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"moment-timezone\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Timeously\", [\"moment-timezone\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Timeously\"] = factory(require(\"moment-timezone\"));\n\telse\n\t\troot[\"Timeously\"] = factory(root[\"moment-timezone\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export let INTERVAL_TYPE = {\n\tSECONDLY: 'second',\n\tMINUTELY: 'minute',\n\tHOURLY: 'hour',\n\tDAILY: 'day',\n\tWEEKLY: 'dayOfWeek',\n\tMONTHLY: 'month',\n\tYEARLY: 'year'\n};","export function pad(num, size) {\n\tif (typeof(num) !== 'string')\n\t\tnum = '' + num;\n\n\tif (!size)\n\t\tsize = 2;\n\n\tif (num.length === size)\n\t\treturn num;\n\n\tlet s = `000000000${num}`;\n\treturn s.substr(s.length - size);\n}","import { pad } from './pad';\n\nlet moment = require('moment-timezone');\n\nlet localOffsetMinutes = -new Date().getTimezoneOffset();\n\nexport class TimeBucket {\n\tconstructor(date) {\n\t\tif (!date) {\n\t\t\tdate = new Date();\n\t\t}\n\t\telse if (typeof(date) === 'string') {\n\t\t\tdate = new Date(date);\n\t\t}\n\t\telse {\n\t\t\tdate = date;\n\t\t}\n\n\t\tthis.date = date;\n\t\tthis._tzOffsetMinutes = -date.getTimezoneOffset();\n\t}\n\n\tstatic get MonthNames() {\n\t\treturn ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\t}\n\n\tstatic get DayNames() {\n\t\treturn ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\t}\n\n\tget offsetString() {\n\t\tlet tzo = this.tzOffsetMinutes;\n\n\t\tif (tzo === 0) {\n\t\t\treturn 'Z';\n\t\t}\n\t\telse {\n\t\t\tlet diff = tzo >= 0 ? '+' : '-';\n\t\t\treturn `${diff}${pad(Math.floor(Math.abs(tzo / 60)))}:${pad(Math.abs(tzo % 60))}`;\n\t\t}\n\t}\n\n\ttz(timezone) {\n\t\tif (!timezone)\n\t\t\ttimezone = 'GMT';\n\n\t\tthis.tzOffsetMinutes = moment.tz(timezone).utcOffset();\n\t\tthis.minute += this.tzOffsetMinutes - localOffsetMinutes;\n\t\treturn this;\n\t}\n\n\t/**\n\t * returns the different in milliseconds between this and timeBucket date\n\t * @param timeBucket\n\t * @returns {number}\n   */\n\tsubtract(timeBucket) {\n\t\treturn this - timeBucket;\n\t}\n\n\ttoString(format) {\n\t\tif (format) {\n\t\t\treturn format\n\t\t\t\t.replace('yyyy', this.year.toString())\n\t\t\t\t.replace('yy', this.year.toString().substr(2))\n\t\t\t\t.replace('MM', pad(this.month + 1))\n\t\t\t\t.replace('dd', pad(this.day))\n\t\t\t\t.replace('HH', pad(this.hour))\n\t\t\t\t.replace('mm', pad(this.minute))\n\t\t\t\t.replace('ss', pad(this.second))\n\t\t\t\t.replace('SSS', pad(this.millisecond, 3))\n\t\t\t\t.replace('Z', this.offsetString);\n\t\t}\n\t\telse {\n\t\t\treturn this.toISOString(true);\n\t\t}\n\t}\n\n\tvalueOf() {\n\t\treturn this.date.getTime();\n\t}\n\n\ttoUTCDate() {\n\t\tlet d = new Date(this.date);\n\t\td.setMinutes(d.getMinutes() - this.tzOffsetMinutes + localOffsetMinutes);\n\t\treturn d;\n\t}\n\n\ttoISOString(withTimeZoneOffset) {\n\t\tif (withTimeZoneOffset) {\n\t\t\t\treturn this.year\n\t\t\t\t\t+ '-' + pad(this.month + 1)\n\t\t\t\t\t+ '-' + pad(this.day)\n\t\t\t\t\t+ 'T' + pad(this.hour)\n\t\t\t\t\t+ ':' + pad(this.minute)\n\t\t\t\t\t+ ':' + pad(this.second)\n\t\t\t\t\t+ '.' + pad(this.millisecond, 3)\n\t\t\t\t\t+ this.offsetString;\n\t\t}\n\t\telse {\n\t\t\treturn this.toUTCDate().toISOString();\n\t\t}\n\t}\n\n\tget millisecond() { return this.date.getMilliseconds(); }\n\tset millisecond(val) { this.date.setMilliseconds(val); }\n\n\tget second() { return this.date.getSeconds(); }\n\tset second(val) { this.date.setSeconds(val); }\n\n\tget minute() { return this.date.getMinutes(); }\n\tset minute(val) { this.date.setMinutes(val); }\n\n\tget hour() { return this.date.getHours(); }\n\tset hour(val) { this.date.setHours(val); }\n\n\tget day() { return this.date.getDate(); }\n\tset day(val) { this.date.setDate(val); }\n\n\tget dayOfWeek() { return this.date.getDay(); }\n\tset dayOfWeek(val) { this.date.setDay(val); }\n\n\tget dayName() {\n\t\treturn TimeBucket.DayNames[this.dayOfWeek];\n\t}\n\n\tget month() { return this.date.getMonth(); }\n\tset month(val) { this.date.setMonth(val); }\n\n\tget monthName() { return TimeBucket.MonthNames[this.month]; }\n\n\tget year() { return this.date.getFullYear(); }\n\tset year(val) { this.date.setFullYear(val); }\n\n\tget tzOffsetMinutes() { return this._tzOffsetMinutes; }\n\tset tzOffsetMinutes(val) { this._tzOffsetMinutes = val; }\n\n\tget daysInMonth() {\n\t\treturn new Date(this.year, this.month + 1, 0).getDate();\n\t}\n}","import { pad } from './pad';\n\nexport class TimeSpan {\n\n  constructor(millisec) {\n\n    this.millisec = millisec || 0;\n\n    let sec = millisec / 1000;\n\n    this.days = ~~(sec / 86400);\n    // After deducting the days calculate the number of hours left\n    this.hours = ~~((sec - (this.days * 86400)) / 3600);\n    // After days and hours , how many minutes are left\n    this.mins = ~~((sec - (this.days * 86400) - (this.hours * 3600)) / 60);\n    // Finally how many seconds left after removing days, hours and minutes.\n    this.sec = ~~((sec - (this.days * 86400) - (this.hours * 3600) - (this.mins * 60))) + 1;\n  }\n\n  get totalDays() {\n    return this.days;\n  }\n\n  get totalHours() {\n    return ~~(this.totalSec / 3600);\n  }\n\n  get totalMins() {\n    return ~~(this.totalSec / 60);\n  }\n\n  get totalSec() {\n    return Math.ceil(this.millisec / 1000);\n  }\n\n  toString() {\n    let clock = '';\n\n    if (this.days > 0)\n      clock += `${pad(this.days)}:`;\n\n    clock += `${pad(this.hours)}:${pad(this.mins)}:${pad(this.sec)}`;\n\n    return clock;\n  }\n}\n","import { INTERVAL_TYPE } from './intervaltype';\nimport { TimeBucket } from './timebucket';\nimport { TimeSpan } from './timespan';\n\nlet intervals = ['year', 'month', 'day', 'hour', 'minute', 'second', 'millisecond'];\nlet intervalLimit = {\n  millisecond: 1000,\n  second: 60,\n  minute: 60,\n  hour: 24,\n  month: 12\n};\n\nfunction getLimit(intervalType, date) {\n  if (intervalType === 'day') {\n    return date.daysInMonth;\n  }\n  else {\n    let limit = intervalLimit[intervalType];\n    if (!limit) {\n      throw new Error(`Can not currently handle ${intervalType} intervals`);\n    }\n    return limit;\n  }\n}\n\nfunction validTime(currTime, startTime, stopTime) {\n  if (!startTime || !stopTime)\n    return true;\n\n  if (startTime < stopTime)\n    return currTime >= startTime && currTime <= stopTime;\n\n  return currTime >= startTime || currTime <= stopTime;\n}\n\nexport class Timeously {\n  constructor(options, callback) {\n    let {name, interval, type, tz, start, stop} = options;\n\n    this.name = (name ? ` ${name}` : '');\n    this.interval = interval || 1;\n    this.intervalType = type || INTERVAL_TYPE.MINUTELY;\n    this.tz = tz;\n    this.callback = callback;\n    this.startTime = start;\n    this.stopTime = stop;\n    this.started = false;\n\n    this.timerID = null;\n    this.start();\n  }\n\n  get title() {\n    let {interval, intervalType} = this;\n\n    for (let key in INTERVAL_TYPE) {\n      let val = INTERVAL_TYPE[key];\n\n      if (val === intervalType)\n        return `${interval} ${key.toLowerCase()}`;\n    }\n  }\n\n  get now() {\n    return new TimeBucket().tz(this.tz);\n  }\n\n  execute() {\n    let self = this;\n\n    if (!self.timerID) return;\n\n    self.callback();\n\n    let nextTimeoutMillisec = self.calculateNextTimeout();\n\n    //self.timerID = setTimeout(function () {\n    //  self.execute();\n    //}, nextTimeoutMillisec);\n    this.setLongTimeout(nextTimeoutMillisec);\n  }\n\n  start() {\n    let self = this;\n    let {title, name} = self;\n\n    let nextTimeoutMillisec = self.calculateNextTimeout();\n    let timespan = new TimeSpan(nextTimeoutMillisec);\n\n    //self.timerID = setTimeout(function () {\n    //  self.execute();\n    //}, nextTimeoutMillisec);\n    this.setLongTimeout(nextTimeoutMillisec);\n\n    console.log(`Timeously starting ${title}${name} in T - ${timespan.toString()} and counting`);\n  }\n\n  stop() {\n    let {title, name, now} = this;\n\n    console.log(`[${title}]${name}: Called stop at ${now.toString()}`);\n\n    this.started = false;\n    if (this.timerID !== null) {\n      clearTimeout(this.timerID);\n      this.timerID = null;\n    }\n  }\n\n  calculateNextTimeout() {\n    let {name, title, interval, intervalType, started, now, startTime, stopTime} = this;\n\n    let limit = getLimit(intervalType, now);\n\n    let nextEvent = now;\n\n    // set lower interval types to 0\n    for (let i = 6; i >= 0; i--) {\n      let interv = intervals[i];\n      if (interv === intervalType) break;\n\n      switch (interv) {\n        case 'day':\n          nextEvent[interv] = 1;\n          break;\n        case 'month':\n          nextEvent[interv] = 0;\n          break;\n        default:\n          nextEvent[interv] -= nextEvent[interv];\n          break;\n      }\n\n    }\n\n    // next possible interval\n    nextEvent[intervalType]++;\n    // current interval value\n    let currTime = nextEvent[intervalType];\n\n    if (startTime) {\n      if (!started) {\n        this.started = true;\n        nextEvent[intervalType] += currTime > startTime ? limit - currTime + startTime : startTime - currTime;\n      }\n      else {\n        nextEvent[intervalType] += interval - 1;\n\n        if (stopTime) {\n          currTime = nextEvent[intervalType];\n\n          if (!validTime(currTime, startTime, stopTime)) {\n            nextEvent[intervalType] += currTime > startTime ? limit - currTime + startTime : startTime - currTime;\n          }\n        }\n      }\n    }\n    else {\n      if (!started) {\n        this.started = true;\n        // get the next interval type event\n        while (interval > 1 && nextEvent[intervalType] % interval !== 0) {\n          nextEvent[intervalType]++;\n        }\n      }\n      else {\n        nextEvent[intervalType] += interval - 1;\n      }\n    }\n\n    // get the diff in milliseconds between nextEvent and now\n    let millisecs = nextEvent - this.now;\n\n    console.log(`[${this.now.toString()}] (${title})${name} - Next event is at ${nextEvent.toString()}. ${millisecs}ms`);\n\n    return millisecs;\n  }\n\n  setLongTimeout(timeout_ms) {\n    let self = this;\n    let {title, name} = self;\n    let max = 86400000; // 1 day vs 2147483647 (max int)\n    //if we have to wait more than max time, need to recursively call this function again\n    if(timeout_ms > max) {\n      //now wait until the max wait time passes then call this function again with\n      //requested wait - max wait we just did, make sure and pass callback\n      self.timerID = setTimeout(function () {\n        let remaining = timeout_ms - max;\n        let days = Math.floor(remaining / 86400000);\n        console.log(`${title}${name}: Long timer - ${days} days remaining`);\n        self.setLongTimeout(remaining);\n      }, max);\n    }\n    //if we are asking to wait less than max, finally just do regular seTimeout and call callback\n    else {\n      self.timerID = setTimeout(function () {\n        self.execute();\n      }, timeout_ms);\n    }\n  }\n\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;"],"sourceRoot":""}