{"version":3,"file":"timebucket.js","sourceRoot":"","sources":["../src/timebucket.ts"],"names":[],"mappings":"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","sourcesContent":["import * as moment from 'moment-timezone';\nimport { pad } from './pad';\nimport { INTERVAL_TYPE } from './intervaltype';\n\nconst localOffsetMinutes = -new Date().getTimezoneOffset();\n\nexport class TimeBucket {\n\t[intervalType: string]: any;\n\n\tpublic tzOffsetMinutes: number;\n\tpublic date: Date;\n\n\tconstructor(date?: Date | string) {\n\t\tif (!date) {\n\t\t\tdate = new Date();\n\t\t}\n\t\telse if (typeof(date) === 'string') {\n\t\t\tdate = new Date(date);\n\t\t}\n\n\t\tthis.date = date;\n\t\tthis.tzOffsetMinutes = -date.getTimezoneOffset();\n\t}\n\n\tpublic static get MonthNames() {\n\t\treturn ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\t}\n\n\tpublic static get DayNames() {\n\t\treturn ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\t}\n\n\tpublic get offsetString() {\n\t\tconst tzo = this.tzOffsetMinutes;\n\n\t\tif (tzo === 0) {\n\t\t\treturn 'Z';\n\t\t}\n\t\telse {\n\t\t\tconst diff = tzo >= 0 ? '+' : '-';\n\t\t\treturn `${diff}${pad(Math.floor(Math.abs(tzo / 60)))}:${pad(Math.abs(tzo % 60))}`;\n\t\t}\n\t}\n\n\tpublic tz(timezone: string) {\n\t\tif (!timezone)\n\t\t\ttimezone = 'GMT';\n\n\t\tthis.tzOffsetMinutes = moment.tz(timezone).utcOffset();\n\t\tthis.minute += this.tzOffsetMinutes - localOffsetMinutes;\n\t\treturn this;\n\t}\n\n\t/**\n\t\t* returns the different in milliseconds between this and timeBucket date\n\t\t* @param timeBucket\n\t\t* @returns {number}\n\t\t*/\n\tpublic subtract(timeBucket: TimeBucket) {\n\t\treturn this.valueOf() - timeBucket.valueOf();\n\t}\n\n\tpublic toString(format?: string) {\n\t\tif (format) {\n\t\t\treturn format\n\t\t\t\t.replace('yyyy', this.year.toString())\n\t\t\t\t.replace('yy', this.year.toString().substr(2))\n\t\t\t\t.replace('MM', pad(this.month + 1))\n\t\t\t\t.replace('dd', pad(this.day))\n\t\t\t\t.replace('HH', pad(this.hour))\n\t\t\t\t.replace('mm', pad(this.minute))\n\t\t\t\t.replace('ss', pad(this.second))\n\t\t\t\t.replace('SSS', pad(this.millisecond, 3))\n\t\t\t\t.replace('Z', this.offsetString);\n\t\t}\n\t\telse {\n\t\t\treturn this.toISOString(true);\n\t\t}\n\t}\n\n\tpublic valueOf() {\n\t\treturn this.date.getTime();\n\t}\n\n\tpublic toUTCDate() {\n\t\tconst d = new Date(this.date);\n\t\td.setMinutes(d.getMinutes() - this.tzOffsetMinutes + localOffsetMinutes);\n\t\treturn d;\n\t}\n\n\tpublic toISOString(withTimeZoneOffset = false) {\n\t\tif (withTimeZoneOffset) {\n\t\t\t\treturn this.year\n\t\t\t\t\t+ '-' + pad(this.month + 1)\n\t\t\t\t\t+ '-' + pad(this.day)\n\t\t\t\t\t+ 'T' + pad(this.hour)\n\t\t\t\t\t+ ':' + pad(this.minute)\n\t\t\t\t\t+ ':' + pad(this.second)\n\t\t\t\t\t+ '.' + pad(this.millisecond, 3)\n\t\t\t\t\t+ this.offsetString;\n\t\t}\n\t\telse {\n\t\t\treturn this.toUTCDate().toISOString();\n\t\t}\n\t}\n\n\tpublic get millisecond() { return this.date.getMilliseconds(); }\n\tpublic set millisecond(val) { this.date.setMilliseconds(val); }\n\n\tpublic get second() { return this.date.getSeconds(); }\n\tpublic set second(val) { this.date.setSeconds(val); }\n\n\tpublic get minute() { return this.date.getMinutes(); }\n\tpublic set minute(val) { this.date.setMinutes(val); }\n\n\tpublic get hour() { return this.date.getHours(); }\n\tpublic set hour(val) { this.date.setHours(val); }\n\n\tpublic get day() { return this.date.getDate(); }\n\tpublic set day(val) { this.date.setDate(val); }\n\n\tpublic get dayOfWeek() { return this.date.getDay(); }\n\n\tpublic get dayName() {\n\t\treturn TimeBucket.DayNames[this.dayOfWeek];\n\t}\n\n\tpublic get month() { return this.date.getMonth(); }\n\tpublic set month(val) { this.date.setMonth(val); }\n\n\tpublic get monthName() { return TimeBucket.MonthNames[this.month]; }\n\n\tpublic get year() { return this.date.getFullYear(); }\n\tpublic set year(val) { this.date.setFullYear(val); }\n\n\tpublic get daysInMonth() {\n\t\treturn new Date(this.year, this.month + 1, 0).getDate();\n\t}\n}\n"]}